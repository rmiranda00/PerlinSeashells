float turbulence(point p, float pixelsize, float Time)
{
    /* Ensure that the pixel size is between 0 and 1, not inclusive */
    float pixelsizeClamped = max(0.000001, pixelsize);
    pixelsizeClamped = min(pixelsizeClamped, 0.999999);
    
    /* Execute the turbulence algorithm from "An Image Synthesizer" */
    float t = 0;
    float scale = 1;

    float n = 0.0;

    while (scale > pixelsizeClamped) {
        t += abs(noise("perlin", p/scale, Time) * scale);
        scale /= 2;
    }
    
    return t;
}

shader fire(
    float Time = 1.0,
    float pixelsize = 0.2,
    point Point = P,
    output color Turbulence = 0.8,
    output color Fire = 0.8)
{
    /* Perlin 4D Turbulence */
    Turbulence = turbulence(Point, pixelsize, Time);
    
    /* Perlin 4D Turbulence */
    Fire = turbulence(Point, pixelsize, Time);
}


